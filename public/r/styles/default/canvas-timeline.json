{
  "name": "canvas-timeline",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion"
  ],
  "files": [
    {
      "path": "ui-canvas/canvas-timeline.tsx",
      "content": "import React, { useEffect, useRef, useState } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\n\ninterface TimelineNode {\n  id: string\n  label: string\n  date: string\n}\n\ninterface CanvasTimelineProps {\n  nodes?: TimelineNode[]\n  className?: string\n}\n\nexport default function CanvasTimeline({\n  nodes = [\n    { id: '1', label: 'Start', date: '2023-01' },\n    { id: '2', label: 'Progress', date: '2023-06' },\n    { id: '3', label: 'Complete', date: '2023-12' }\n  ],\n  className = ''\n}: CanvasTimelineProps) {\n  const [hoveredNode, setHoveredNode] = useState<string | null>(null)\n\n  return (\n    <div className={`relative min-h-[200px] w-full ${className}`}>\n      <div className=\"absolute top-1/2 h-[2px] w-full bg-gradient-to-r from-purple-300 via-pink-300 to-indigo-300\" />\n\n      <div className=\"relative flex h-full items-center justify-between\">\n        {nodes.map((node, index) => (\n          <div key={node.id} className=\"relative\">\n            {/* Connector Line */}\n            {index < nodes.length - 1 && (\n              <div\n                className=\"absolute h-[2px] bg-gradient-to-r from-purple-200 to-pink-200\"\n                style={{\n                  width: '100%',\n                  left: '50%',\n                  top: '50%',\n                  transform: 'translateY(-50%)'\n                }}\n              />\n            )}\n\n            {/* Node */}\n            <motion.div\n              className=\"relative z-10\"\n              onHoverStart={() => setHoveredNode(node.id)}\n              onHoverEnd={() => setHoveredNode(null)}\n            >\n              <motion.div\n                className={`flex h-12 w-12 cursor-pointer items-center justify-center rounded-full\n                          bg-gradient-to-r from-purple-400 to-pink-400 font-medium text-white\n                          shadow-lg transition-shadow duration-300`}\n                whileHover={{ scale: 1.1 }}\n                animate={{\n                  boxShadow: hoveredNode === node.id\n                    ? '0 0 25px rgba(168, 85, 247, 0.4)'\n                    : '0 4px 6px rgba(0, 0, 0, 0.1)'\n                }}\n              >\n                {node.label[0]}\n              </motion.div>\n\n              {/* Watercolor Spread Effect */}\n              <AnimatePresence>\n                {hoveredNode === node.id && (\n                  <motion.div\n                    className=\"absolute inset-0 rounded-full bg-gradient-to-r from-purple-200/20 to-pink-200/20 blur-xl\"\n                    initial={{ scale: 0.8, opacity: 0 }}\n                    animate={{ scale: 1.5, opacity: 1 }}\n                    exit={{ scale: 0.8, opacity: 0 }}\n                    transition={{ duration: 0.3 }}\n                  />\n                )}\n              </AnimatePresence>\n\n              {/* Label */}\n              <div className=\"absolute -bottom-8 left-1/2 -translate-x-1/2 text-sm text-gray-600\">\n                {node.label}\n              </div>\n              <div className=\"absolute -top-8 left-1/2 -translate-x-1/2 text-xs text-gray-500\">\n                {node.date}\n              </div>\n            </motion.div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}