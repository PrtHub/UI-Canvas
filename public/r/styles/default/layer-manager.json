{
  "name": "layer-manager",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "ui-canvas/layer-manager.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { EyeIcon, EyeOffIcon, LockIcon, UnlockIcon, Trash2Icon, MoveUpIcon, MoveDownIcon } from \"lucide-react\";\n\nexport interface Layer {\n  id: string;\n  name: string;\n  visible: boolean;\n  locked: boolean;\n  thumbnail?: string;\n}\n\nexport interface LayerManagerProps extends React.HTMLAttributes<HTMLDivElement> {\n  layers: Layer[];\n  selectedLayerId?: string;\n  onLayerSelect?: (id: string) => void;\n  onLayerVisibilityToggle?: (id: string) => void;\n  onLayerLockToggle?: (id: string) => void;\n  onLayerDelete?: (id: string) => void;\n  onLayerMove?: (id: string, direction: \"up\" | \"down\") => void;\n  onLayerRename?: (id: string, newName: string) => void;\n}\n\nexport default function LayerManager({\n  layers,\n  selectedLayerId,\n  onLayerSelect,\n  onLayerVisibilityToggle,\n  onLayerLockToggle,\n  onLayerDelete,\n  onLayerMove,\n  onLayerRename,\n  className,\n  ...props\n}: LayerManagerProps) {\n  return (\n    <div\n      className={cn(\n        \"flex flex-col gap-2 rounded-lg border bg-background/95 p-2 shadow-md\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"border-b px-2 py-1 text-sm font-medium\">Layers</div>\n      <div className=\"flex flex-col gap-1\">\n        {layers.map((layer) => (\n          <div\n            key={layer.id}\n            className={cn(\n              \"flex cursor-pointer items-center gap-2 rounded-md p-2 transition-colors hover:bg-accent/50\",\n              selectedLayerId === layer.id && \"bg-accent\"\n            )}\n            onClick={() => onLayerSelect?.(layer.id)}\n          >\n            {layer.thumbnail && (\n              <div className=\"h-8 w-8 overflow-hidden rounded border\">\n                <img\n                  src={layer.thumbnail}\n                  alt={layer.name}\n                  className=\"h-full w-full object-cover\"\n                />\n              </div>\n            )}\n\n            <input\n              type=\"text\"\n              value={layer.name}\n              className=\"flex-1 rounded border-none bg-transparent px-1 focus:outline-none focus:ring-1 focus:ring-ring\"\n              onChange={(e) => onLayerRename?.(layer.id, e.target.value)}\n            />\n\n            <div className=\"flex items-center gap-1\">\n              <button\n                className=\"rounded-sm p-1 hover:bg-accent\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onLayerVisibilityToggle?.(layer.id);\n                }}\n              >\n                {layer.visible ? (\n                  <EyeIcon className=\"h-4 w-4\" />\n                ) : (\n                  <EyeOffIcon className=\"h-4 w-4\" />\n                )}\n              </button>\n\n              <button\n                className=\"rounded-sm p-1 hover:bg-accent\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onLayerLockToggle?.(layer.id);\n                }}\n              >\n                {layer.locked ? (\n                  <LockIcon className=\"h-4 w-4\" />\n                ) : (\n                  <UnlockIcon className=\"h-4 w-4\" />\n                )}\n              </button>\n\n              <button\n                className=\"rounded-sm p-1 hover:bg-accent\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onLayerMove?.(layer.id, \"up\");\n                }}\n              >\n                <MoveUpIcon className=\"h-4 w-4\" />\n              </button>\n\n              <button\n                className=\"rounded-sm p-1 hover:bg-accent\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onLayerMove?.(layer.id, \"down\");\n                }}\n              >\n                <MoveDownIcon className=\"h-4 w-4\" />\n              </button>\n\n              <button\n                className=\"rounded-sm p-1 hover:bg-destructive/90\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onLayerDelete?.(layer.id);\n                }}\n              >\n                <Trash2Icon className=\"h-4 w-4\" />\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}